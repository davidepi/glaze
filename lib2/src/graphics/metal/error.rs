use std::error::Error;

/// An error generated by a metal context.
#[derive(Debug, Clone, PartialEq, Eq)]
pub enum MetalError {
    Custom(String),
}

impl MetalError {
    /// Creates a new custom MetalError with the given text.
    pub fn new(text: String) -> Self {
        Self::Custom(text)
    }
}

impl Error for MetalError {}

impl std::fmt::Display for MetalError {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MetalError::Custom(text) => write!(f, "{}", text),
        }
    }
}

name: CI

on:
  pull_request:
    paths:
      - '**.rs'
      - '**.toml'
      - '.github/workflows/ci.yml'

jobs:
  syntax:
    name: Check Rust Syntax
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: x86_64-unknown-linux-gnu-cargo-nightly
      - name: Check Formatting
        run: cargo +nightly fmt --all -- --check

  lint:
    name: Rust lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: x86_64-unknown-linux-gnu-cargo-stable
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev libassimp-dev
      - name: Run Linter
        run: cargo +stable clippy --all-features

  tests_all_features:
    name: Build and Test
    needs: [syntax, lint]
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-22.04, }
    env:
      CARGO_INCREMENTAL: '0'
      RUST_BACKTRACE: '1'
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ matrix.platform.target }}-cargo-stable
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev libassimp-dev libvulkan-dev
      - name: Build (no features)
        shell: bash
        run: cargo +stable build --verbose --package glaze --target ${{ matrix.platform.target }}
      - name: Build (vulkan feature)
        shell: bash
        run: cargo +stable build --verbose --package glaze --features vulkan --target ${{ matrix.platform.target }}
      - name: Build (vulkan-interactive feature)
        shell: bash
        run: cargo +stable build --verbose --package glaze --features vulkan-interactive --target ${{ matrix.platform.target }}
      - name: Build (workspaces)
        shell: bash
        run: cargo +stable build --verbose --workspace --target ${{ matrix.platform.target }}
      - name: Build tests
        shell: bash
        run: cargo +stable test --no-run --verbose --all-features --target ${{ matrix.platform.target }}
      - name: Run tests
        shell: bash
        run: cargo +stable test --verbose --all-features --no-fail-fast --target ${{ matrix.platform.target }}

#version 460
#extension GL_EXT_nonuniform_qualifier: require

#include "random.glsl"
#include "raytrace_structures.glsl"

layout(local_size_x = 16) in;
layout(local_size_y = 16) in;

layout(push_constant) uniform readonly pc {
  mat4 camera2world;
  mat4 screen2camera;
} Camera;
layout(set=0, binding=0) uniform readonly frameData {
  RTFrameData data;
} FrameData;
layout(std430, set=0, binding=1) writeonly buffer bdpt {
  BDPTPath paths[];
} Bdpt;
layout(std430, set=1, binding=5) readonly buffer lightBuffer {
  RTLight lights[];
} LightBuffer;

void main()
{
  vec2 pixel = (gl_WorkGroupID*gl_LocalInvocationID).xy;
  if(pixel.x < FrameData.data.scene_size.x &&
     pixel.y < FrameData.data.scene_size.y)
  {
    uint path_id = uint(pixel.y*FrameData.data.scene_size.x+pixel.x);
    // TODO...
  }
}
